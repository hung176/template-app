{"version":3,"sources":["CardContainer.js","CardFront.js","CardBack.js","Loading.js","FlashCardTemp.js","CardEdit.js","animalImg/index.js","App.js","helper.js","reportWebVitals.js","index.js"],"names":["CardContainer","children","className","CardFront","word","audio","imageUrl","src","alt","type","controls","CardBack","meaning","Loading","FlashCardTemp","words","loadingWord","CardEdit","setWord","animalImages","useState","wordSearch","setWordSearch","optionAnimals","map","animal","title","sort","animalName","value","label","onSubmit","e","preventDefault","options","placeholder","isSearchable","onChange","fetchPhotos","a","flickrURL","fetch","response","json","animalPhotos","App","setLoadingWord","setWords","setAnimalImages","setImageUrl","fetchWord","result","wordDataJson","wordData","string","charAt","toUpperCase","slice","Error","useEffect","then","res","photo","photoset","filter","photoItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffb9d7a5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CardContainer({ children }) {\r\n  return (\r\n    <div className=\"card-container\">{children}</div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function CardFront({\r\n  word,\r\n  audio,\r\n  imageUrl,\r\n}) {\r\n\r\n  return (\r\n    <div className=\"card-front\">\r\n      <img src={imageUrl} alt={word} />\r\n      <audio className=\"audio\" src={audio} type=\"audio/mpeg\" controls />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function CardBack({ word, meaning }) {\r\n\r\n  return (\r\n    <div className=\"card-back\">\r\n      <h2>{word}</h2>\r\n      <p>{meaning}</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './index.css';\r\n\r\nexport default function Loading() {\r\n\r\n  return(\r\n    <div className=\"spin\"></div>\r\n  );\r\n}","import React from 'react';\r\nimport CardContainer from './CardContainer';\r\nimport CardFront from './CardFront';\r\nimport CardBack from './CardBack';\r\nimport Loading from './Loading';\r\n\r\nconst FlashCardTemp = ({ imageUrl, words, loadingWord }) => {\r\n  const { word, meaning, audio } = words;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CardContainer>\r\n        {loadingWord && <Loading />}\r\n        {!loadingWord && <CardFront\r\n          audio={audio}\r\n          word={word}\r\n          imageUrl={imageUrl} \r\n          loadingWord={loadingWord}\r\n        />}\r\n      </CardContainer>\r\n      \r\n      <CardContainer>\r\n        {loadingWord && <Loading />}\r\n        {!loadingWord && <CardBack word={word} meaning={meaning} />}\r\n      </CardContainer>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlashCardTemp;","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n\r\nfunction CardEdit({ setWord, animalImages }) {\r\n  const [wordSearch, setWordSearch] = useState({});\r\n  const optionAnimals = \r\n    animalImages\r\n      .map(animal => animal.title)\r\n      .sort()\r\n      .map(animalName => ({\r\n        value: animalName,\r\n        label: animalName\r\n      }));\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault();\r\n        setWord(wordSearch['value']);\r\n      }}>\r\n        <Select\r\n          className=\"word-search\"\r\n          options={optionAnimals}\r\n          placeholder=\"Select a animal\"\r\n          isSearchable\r\n          onChange={setWordSearch}\r\n        />\r\n        <button className=\"btn\" type=\"submit\">Preview</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardEdit;","\r\nexport const fetchPhotos = async() => {\r\n  const BASE_URL = 'https://api.flickr.com/services/rest/';\r\n  const API_KEY = '0104be4ab6ed6e11994df43528078c31';\r\n  const PHOTOSET_ID = '72157718300400733';\r\n  const USER_ID = '192219400@N08';\r\n\r\n  const flickrURL = `${BASE_URL}?method=flickr.photosets.getPhotos&api_key=${API_KEY}&photoset_id=${PHOTOSET_ID}&user_id=${USER_ID}&extras=url_o&format=json&nojsoncallback=1`;\r\n  const response = await fetch(flickrURL);\r\n  const animalPhotos = await response.json();\r\n  return animalPhotos;\r\n}","import React, { useState, useEffect } from 'react';\nimport FlashCardTemp from './FlashCardTemp';\nimport CardEdit from './CardEdit';\n// import Button from './Button';\n\nimport { fetchPhotos } from './animalImg';\nimport { capitalizeFirstLetter } from './helper';\n\nimport './App.css';\n\nfunction App() {\n  const [loadingWord, setLoadingWord] = useState(false);\n  const [word, setWord] = useState('Elephant');\n  const [words, setWords] = useState({});\n\n  const [animalImages, setAnimalImages] = useState([]);\n  const [imageUrl, setImageUrl] = useState('');\n\n  // const [generated, setGenerated] = useState(null)\n\n  const fetchWord = async (word) => {\n    try {\n      setLoadingWord(true);\n      const result = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en_US/${word}`);\n      const wordDataJson = await result.json();\n      const wordData = {\n        word: capitalizeFirstLetter(wordDataJson[0]['word']),\n        audio: wordDataJson[0]['phonetics'][0]['audio'],\n        meaning: wordDataJson[0]['meanings'][0]['definitions'][0]['definition'],\n      };\n  \n      setWords(wordData);\n      setLoadingWord(false);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchWord(word);\n\n    fetchPhotos().then(res => {\n      const { photoset: { photo } } = res;\n      const imageUrl = photo.filter(photoItem => photoItem.title === word)[0]['url_o'];\n      setAnimalImages(photo);\n      setImageUrl(imageUrl);\n    })\n\n  }, [word, setAnimalImages]);\n\n  return (\n    <div className=\"App\">\n      <h1>ANIMALS FLASHCARD FOR KID</h1>\n      <CardEdit setWord={setWord} animalImages={animalImages} />\n      <FlashCardTemp\n        loadingWord={loadingWord}\n        imageUrl={imageUrl}\n        words={words}\n      />\n      {/* <Button\n        text=\"GeneratePDF\"\n        generated={generated}\n        setGenerated={setGenerated}\n      /> */}\n    </div>\n  );\n}\n\nexport default App;\n","export function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App {...window.templateProps} word=\"abc\"/> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}